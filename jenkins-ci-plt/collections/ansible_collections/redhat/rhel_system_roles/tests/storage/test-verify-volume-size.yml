---

- name: parse the actual size of the volume
  redhat.rhel_system_roles.bsize:
    size: "{{ storage_test_blkinfo.info[storage_test_volume._device].size }}"
  register: storage_test_actual_size
  when: _storage_test_volume_present and storage_test_volume.type not in ('partition', 'disk')

- name: parse the requested size of the volume
  redhat.rhel_system_roles.bsize:
    size: "{{ storage_test_volume.size }}"
  register: storage_test_requested_size
  when: _storage_test_volume_present and storage_test_volume.type == "lvm" and "%" not in storage_test_volume.size|string

- name: Establish base value for expected size
  set_fact:
    storage_test_expected_size: "{{ storage_test_requested_size.bytes }}"
  when: _storage_test_volume_present and storage_test_volume.type == "lvm" and "%" not in storage_test_volume.size|string

- debug:
    var: storage_test_expected_size

- name: Convert percentage-based size to normal size as needed
  block:
    - debug:
        var: storage_test_pool

    - debug:
        var: storage_test_blkinfo

    - name: Get the size of parent/pool device
      redhat.rhel_system_roles.bsize:
        size: "{{ ansible_lvm.vgs[storage_test_pool.name].size_g + 'G' }}"
      register: storage_test_pool_size

    - debug:
        var: storage_test_pool_size

    - name: Calculate the expected size based on pool size and percentage value
      set_fact:
        storage_test_expected_size: "{{ (storage_test_pool_size.bytes * ((storage_test_volume.size[:-1]|int)/100.0)) }}"
  when: _storage_test_volume_present and storage_test_volume.type == "lvm" and "%" in storage_test_volume.size|string

- debug:
    var: storage_test_actual_size

- debug:
    var: storage_test_expected_size

- assert:
    that: (storage_test_expected_size|int - storage_test_actual_size.bytes)|abs / storage_test_expected_size|int < 0.01
    msg: "Volume {{ storage_test_volume.name }} has unexpected size ({{ storage_test_expected_size|int }} / {{ storage_test_actual_size.bytes }})"
  when: _storage_test_volume_present and storage_test_volume.type == "lvm"
