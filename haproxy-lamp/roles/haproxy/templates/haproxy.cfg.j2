#HAProxy 配置文件优先级说明：
#  frontend 与 backend > defaults > global

global
	maxconn		65535             #定义 HAProxy 进程允许的最大并发连接数
	uid			haproxy           #指定 HAProxy 进程运行的用户 ID
	gid			haproxy           #指定 HAProxy 进程运行的用户组 ID
	spread-checks	3             #用于控制后端服务器健康检查的时间间隔的随机性。
	                              #它决定了健康检查的时间间隔会在多大程度上随机提前或延迟
	daemon                        #使 HAProxy 以后台守护进程模式运行
	nbproc		1                 #指定 HAProxy worker 进程的数量
	pidfile		/run/haproxy.pid  #指定 HAProxy 进程的 pid 文件

defaults
	log			127.0.0.1	local3  #定义日志输出的目标地址和日志级别
	mode		{{ mode }}          #定义代理的模式，如 http 或 tcp。
	option		httplog             #启用 HTTP 请求的日志记录功能
	option 		httpclose           #每次请求完成后，HAProxy 会主动关闭与客户端和服务器的 HTTP 连接。
	                                #默认情况下，HAProxy 工作在 keep-alive 模式，允许在同一个 TCP 连接上进行多次 HTTP 请求。
	option		dontlognull         #防止记录空连接的日志。
	                                #如果客户端建立了连接，但没有发送任何数据就断开连接，这种空连接的日志将不会被记录。
	option		forwardfor          #将原始客户端的 IP 地址传递给后端服务器
	option		redispatch          #当后端服务器出现故障时，强制将请求重新分配到其他健康的服务器上。
	retries		5                   #用于控制在尝试连接到后端服务器时，如果连接失败，HAProxy 会尝试重新连接的次数。
	maxconn		2000                #默认每个代理的最大并发连接数
	stats		uri /haproxy-stats
	stats		auth admin:admin
	timeout		connect		5s      #定义 HAProxy 与后端服务器建立连接的超时时间。
	                                #如果 HAProxy 在指定的时间内无法与后端服务器建立连接，连接将被关闭。
	timeout		client		20s     #定义客户端连接的超时时间。如果客户端在指定的时间内没有发送任何数据，连接将被关闭。
	timeout		server		20s     #定义后端服务器连接的超时时间。如果后端服务器在指定的时间内没有发送任何数据，连接将被关闭。

frontend  HAProxy  #定义 HAProxy 如何接收客户端请求
	bind		{{ ansible_facts.default_ipv4.address }}:80  #指定 HAProxy 监听的 IP 地址和端口
	mode		{{ mode }}                                   #定义前端的模式，如 http 或 tcp。
	option		httplog
	default_backend		apache-php

backend  apache-php
	option		httpchk	HEAD /index.php HTTP/1.0
	# web service health check
	balance		{{ balance }}
	{% for host in groups['webservers'] %}
	server {{ hostvars[host].ansible_facts.hostname }} {{ hostvars[host].ansible_facts.default_ipv4.address }}:80  check inter	3000  rise 3  fall 2
	{% endfor %}

    #backend 中的参数说明：
    #  check 参数：启用对后端服务器的健康检查
    #  inter 参数：定义健康检查的间隔时间（以毫秒为单位）。这是 HAProxy 检查后端服务器健康状态的频率。
    #             check inter 3000 表示每 3000 毫秒（即 3 秒）检查一次后端服务器的健康状态。
	#  rise 参数：定义在标记服务器为 “健康” 之前，需要连续成功通过的健康检查次数。
	#            ise 3 表示服务器需要连续通过 3 次健康检查后，才会被标记为 “健康” 状态。
	#  fall 参数：定义在标记服务器为 “不健康” 之前，需要连续失败的健康检查次数。
	#            fall 2 表示服务器需要连续失败 2 次健康检查后，才会被标记为 “不健康” 状态。

	#global 段中的 "spread-checks 3" 表示健康检查的时间间隔会在配置的时间基础上随机提前或延迟 30%。
	#如，如果健康检查的间隔配置为 3000 毫秒（3 秒），那么实际的检查间隔可能会在 2100 毫秒到 3900 毫秒之间随机变化。
